{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/names/index.ts","webpack:///./src/app/names/names.component.html","webpack:///./src/app/names/names.component.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/language.service.ts","webpack:///./src/app/test/index.ts","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- navigation items -->\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\" *ngIf=\\\"langauge\\\" >\\n    <div class=\\\"navbar-nav\\\">\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/test\\\">Test Page</a>\\n    </div>\\n</nav>\\n\\n<!-- main app container div -->\\n<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-3 \\\">\\n                <router-outlet>\\n                </router-outlet>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from \"@angular/core\";\n\n@Component({ selector: \"app\", templateUrl: \"app.component.html\" })\nexport class AppComponent {\n\n    constructor(\n    ) {\n\n    }\n}\n","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule }    from '@angular/forms';\n\n// used to get languages\nimport { LanguageService } from './services/language.service';\n\n\nimport { AppComponent }  from './app.component';\nimport { NamesComponent } from './names';\nimport { routing }        from './app.routing';\nimport { TestComponent } from './test';\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        routing\n    ],\n    declarations: [\n        AppComponent,\n        NamesComponent,\n        TestComponent\n    ],\n    providers: [\n        // this is used to get language translated words from LanguageService\n        LanguageService\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule { }","import { Routes, RouterModule } from '@angular/router';\nimport { NamesComponent } from './names';\nimport { TestComponent } from './test';\n\nconst appRoutes: Routes = [\n    { path: '', component: NamesComponent },  \n    { path: 'test', component: TestComponent },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }    \n];\n\nexport const routing = RouterModule.forRoot(appRoutes);","export * from './names.component';\n","module.exports = \"<h2>Select welcome message language</h2>\\n<form [formGroup]=\\\"namesForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div>Name is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"language\\\">Language</label>\\n        <select name=\\\"language\\\" id=\\\"langauge\\\" formControlName=\\\"language\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.language.errors }\\\" >\\n            <option value=\\\"\\\">-- Select --</option>\\n            <option value=\\\"en\\\">English</option>\\n            <option value=\\\"fr\\\">French</option>\\n            <option value=\\\"it\\\">Italian</option>\\n            <option value=\\\"sp\\\">Spanish</option>\\n            <option value=\\\"gr\\\">German</option>\\n        </select>\\n        <div *ngIf=\\\"submitted && f.langauge && f.langauge.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div>Language is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Send</button>\\n        <a routerLink=\\\"/test\\\" class=\\\"btn btn-link\\\">Test Page</a>\\n    </div>\\n    <div *ngIf=\\\"isShowMessage && message\\\">\\n        {{ message }}\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Language } from \"../models\";\nimport { LanguageService } from \"../services\";\n\n@Component({\n    selector: 'app-names',\n    templateUrl: 'names.component.html'\n})\n\nexport class NamesComponent implements OnInit {\n    namesForm: FormGroup;\n    submitted = false;\n    isShowMessage = false;\n    message = '';\n    langauge: Language;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private languageService: LanguageService\n    ) { \n\n    }\n\n    ngOnInit() {\n        this.namesForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            language: ['', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.namesForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;        \n\n        // stop here if form is invalid\n        if (this.namesForm.invalid) {\n            return;\n        }\n\n        this.getLanguage();\n        this.isShowMessage = true;\n        this.message = (this.langauge && this.f.name.value) ? `${this.langauge[this.f.language.value]} ${this.f.name.value}` : '';\n    }\n\n    getLanguage() {\n        return this.languageService.get().then( (language: Language) => {\n            this.langauge = language;\n        });\n    }    \n\n}","export * from './language.service';","import { Injectable } from '@angular/core';\n\nimport { Language } from '../models';\n\nconst LANGAUGE: Language = {\n    en: 'Hello',\n    fr: 'Bonjour',\n    it: 'Ciao',\n    sp: 'Hola',\n    gr: 'Hallo'\n};\n\n@Injectable({ providedIn: 'root' })\nexport class LanguageService {\n\n    constructor() { }\n\n    get() {\n        return new Promise(resolve => resolve(LANGAUGE));\n    }\n}\n","export * from './test.component';\n","module.exports = \"<div>\\n<h2>Test</h2>\\n    <div>\\n        {{ message }}\\n    </div>\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">Names</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-test',\n    templateUrl: 'test.component.html'\n})\n\nexport class TestComponent implements OnInit {\n    message = '';\n\n    constructor() { }\n\n    ngOnInit() {\n        this.message = 'This is test page';\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}